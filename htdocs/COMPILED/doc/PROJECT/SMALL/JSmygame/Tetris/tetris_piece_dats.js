/*
**
** The JavaScript code is generated by atscc2js
** The starting compilation time is: 2015-6-29: 15h:18m
**
*/

/* ATSextcode_beg() */
//
function
Piece_new_()
{
  return { x: 0, y: 0, mat1: null, mat2: null };
}
//
/* ATSextcode_end() */

/* ATSextcode_beg() */
//
function
Piece_get_x(piece) { return piece.x; }
function
Piece_set_x(piece, x) { piece.x = x; return; }
//
function
Piece_get_y(piece) { return piece.y; }
function
Piece_set_y(piece, y) { piece.y = y; return; }
//
function
Piece_get_mat1(piece) { return piece.mat1; }
function
Piece_set_mat1(piece, M1) { piece.mat1 = M1; return; }
//
function
Piece_get_mat2(piece) { return piece.mat2; }
function
Piece_set_mat2(piece, M2) { piece.mat2 = M2; return; }
//
/* ATSextcode_end() */

var tetris_piece__statmp14

var tetris_piece__statmp20

var tetris_piece__statmp26

var tetris_piece__statmp32

var tetris_piece__statmp38

var tetris_piece__statmp44

var tetris_piece__statmp50

var tetris_piece__statmp56

var tetris_piece__statmp62

var tetris_piece__statmp220

var tetris_piece__statmp221

var tetris_piece__statmp225

var tetris_piece__statmp226

function
tetris_piece__patsfun_2__closurerize(env0, env1, env2, env3)
{
  return [function(cenv, arg0, arg1) { return tetris_piece__patsfun_2(cenv[1], cenv[2], cenv[3], cenv[4], arg0, arg1); }, env0, env1, env2, env3];
}


function
tetris_piece__patsfun_13__closurerize(env0)
{
  return [function(cenv, arg0, arg1) { return tetris_piece__patsfun_13(cenv[1], arg0, arg1); }, env0];
}


function
tetris_piece__patsfun_16__closurerize(env0, env1, env2, env3)
{
  return [function(cenv, arg0, arg1) { return tetris_piece__patsfun_16(cenv[1], cenv[2], cenv[3], cenv[4], arg0, arg1); }, env0, env1, env2, env3];
}


function
tetris_piece__patsfun_19__closurerize(env0, env1, env2)
{
  return [function(cenv, arg0, arg1) { return tetris_piece__patsfun_19(cenv[1], cenv[2], cenv[3], arg0, arg1); }, env0, env1, env2];
}


function
tetris_piece__patsfun_21__closurerize(env0)
{
  return [function(cenv, arg0, arg1) { return tetris_piece__patsfun_21(cenv[1], arg0, arg1); }, env0];
}


function
tetris_piece__patsfun_23__closurerize(env0, env1, env2, env3)
{
  return [function(cenv, arg0, arg1) { return tetris_piece__patsfun_23(cenv[1], cenv[2], cenv[3], cenv[4], arg0, arg1); }, env0, env1, env2, env3];
}


function
tetris_piece__patsfun_25__closurerize(env0, env1, env2, env3)
{
  return [function(cenv, arg0, arg1) { return tetris_piece__patsfun_25(cenv[1], cenv[2], cenv[3], cenv[4], arg0, arg1); }, env0, env1, env2, env3];
}


function
tetris_piece__patsfun_39__closurerize(env0, env1, env2)
{
  return [function(cenv, arg0, arg1) { return tetris_piece__patsfun_39(cenv[1], cenv[2], cenv[3], arg0, arg1); }, env0, env1, env2];
}


function
tetris_piece__patsfun_43__closurerize(env0)
{
  return [function(cenv, arg0, arg1) { return tetris_piece__patsfun_43(cenv[1], arg0, arg1); }, env0];
}


function
tetris_piece__patsfun_45__closurerize(env0)
{
  return [function(cenv, arg0, arg1) { return tetris_piece__patsfun_45(cenv[1], arg0, arg1); }, env0];
}


function
tetris_piece__patsfun_48__closurerize(env0)
{
  return [function(cenv, arg0, arg1) { return tetris_piece__patsfun_48(cenv[1], arg0, arg1); }, env0];
}


function
tetris_piece__patsfun_53__closurerize(env0, env1)
{
  return [function(cenv, arg0, arg1) { return tetris_piece__patsfun_53(cenv[1], cenv[2], arg0, arg1); }, env0, env1];
}


function
Piece_new()
{
//
// knd = 0
  var tmpret0
  var tmp1
  var tmp2
  var tmp3
  var tmp4
  var tmp5
  var tmplab, tmplab_js
//
  // __patsflab_Piece_new
  tmp1 = Piece_new_();
  tmp3 = Block_null();
  tmp2 = ats2jspre_matrixref_make_elt(4, 4, tmp3);
  tmp5 = Block_null();
  tmp4 = ats2jspre_matrixref_make_elt(4, 4, tmp5);
  Piece_set_mat1(tmp1, tmp2);
  Piece_set_mat2(tmp1, tmp4);
  tmpret0 = tmp1;
  return tmpret0;
} // end-of-function


function
tetris_piece__Piece_update_mat_1(arg0, arg1, arg2, arg3)
{
//
// knd = 0
  var tmp9
  var tmplab, tmplab_js
//
  // __patsflab_tetris_piece__Piece_update_mat_1
  tmp9 = Piece_get_mat1(arg0);
  ats2jspre_matrixref_foreach_cloref(tmp9, 4, 4, tetris_piece__patsfun_2__closurerize(arg1, arg2, arg3, tmp9));
  return/*_void*/;
} // end-of-function


function
tetris_piece__patsfun_2(env0, env1, env2, env3, arg0, arg1)
{
//
// knd = 0
  var tmp11
  var tmp12
  var tmp13
  var tmplab, tmplab_js
//
  // __patsflab_tetris_piece__patsfun_2
  tmp12 = ats2jspre_matrixref_get_at(env2, arg0, 4, arg1);
  tmp11 = ats2jspre_gt_int0_int0(tmp12, 0);
  if(tmp11) {
    tmp13 = Block_new_c1c2(env0, env1);
    ats2jspre_matrixref_set_at(env3, arg0, 4, arg1, tmp13);
  } else {
    // ATSINSmove_void
  } // endif
  return/*_void*/;
} // end-of-function


function
tetris_piece__Piece_update_0_3(arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_tetris_piece__Piece_update_0_3
  tetris_piece__Piece_update_mat_1(arg0, "#0e0e0e", "#428bca", tetris_piece__statmp14);
  return/*_void*/;
} // end-of-function


function
tetris_piece__Piece_update_10_4(arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_tetris_piece__Piece_update_10_4
  tetris_piece__Piece_update_mat_1(arg0, "#0e0e0e", "#5bc0de", tetris_piece__statmp20);
  return/*_void*/;
} // end-of-function


function
tetris_piece__Piece_update_11_5(arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_tetris_piece__Piece_update_11_5
  tetris_piece__Piece_update_mat_1(arg0, "#0e0e0e", "#5bc0de", tetris_piece__statmp26);
  return/*_void*/;
} // end-of-function


function
tetris_piece__Piece_update_20_6(arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_tetris_piece__Piece_update_20_6
  tetris_piece__Piece_update_mat_1(arg0, "#0e0e0e", "#f0ad4e", tetris_piece__statmp32);
  return/*_void*/;
} // end-of-function


function
tetris_piece__Piece_update_21_7(arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_tetris_piece__Piece_update_21_7
  tetris_piece__Piece_update_mat_1(arg0, "#0e0e0e", "#f0ad4e", tetris_piece__statmp38);
  return/*_void*/;
} // end-of-function


function
tetris_piece__Piece_update_30_8(arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_tetris_piece__Piece_update_30_8
  tetris_piece__Piece_update_mat_1(arg0, "#0e0e0e", "#5cb85c", tetris_piece__statmp44);
  return/*_void*/;
} // end-of-function


function
tetris_piece__Piece_update_31_9(arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_tetris_piece__Piece_update_31_9
  tetris_piece__Piece_update_mat_1(arg0, "#0e0e0e", "#5cb85c", tetris_piece__statmp50);
  return/*_void*/;
} // end-of-function


function
tetris_piece__Piece_update_40_10(arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_tetris_piece__Piece_update_40_10
  tetris_piece__Piece_update_mat_1(arg0, "#0e0e0e", "#d9534f", tetris_piece__statmp56);
  return/*_void*/;
} // end-of-function


function
tetris_piece__Piece_update_41_11(arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_tetris_piece__Piece_update_41_11
  tetris_piece__Piece_update_mat_1(arg0, "#0e0e0e", "#d9534f", tetris_piece__statmp62);
  return/*_void*/;
} // end-of-function


function
Piece_mat_nullify(arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_Piece_mat_nullify
  ats2jspre_matrixref_foreach_cloref(arg0, 4, 4, tetris_piece__patsfun_13__closurerize(arg0));
  return/*_void*/;
} // end-of-function


function
tetris_piece__patsfun_13(env0, arg0, arg1)
{
//
// knd = 0
  var tmp70
  var tmplab, tmplab_js
//
  // __patsflab_tetris_piece__patsfun_13
  tmp70 = Block_null();
  ats2jspre_matrixref_set_at(env0, arg0, 4, arg1, tmp70);
  return/*_void*/;
} // end-of-function


function
Piece_mat_collide_at(arg0, arg1, arg2)
{
//
// knd = 0
  var tmpret71
  var tmp72
  var tmplab, tmplab_js
//
  // __patsflab_Piece_mat_collide_at
  tmp72 = theGameBoard_get();
  tmpret71 = ats2jspre_matrixref_exists_cloref(arg0, 4, 4, tetris_piece__patsfun_16__closurerize(arg0, arg1, arg2, tmp72));
  return tmpret71;
} // end-of-function


function
tetris_piece__ftest_15(env0, env1, env2, env3, arg0, arg1)
{
//
// knd = 0
  var tmpret73
  var tmp74
  var tmp75
  var tmp76
  var tmp77
  var tmplab, tmplab_js
//
  // __patsflab_tetris_piece__ftest_15
  tmp75 = ats2jspre_matrixref_get_at(env0, arg0, 4, arg1);
  tmp74 = Block_isnot_null(tmp75);
  if(tmp74) {
    tmp76 = ats2jspre_add_int0_int0(env1, arg0);
    tmp77 = ats2jspre_add_int0_int0(env2, arg1);
    tmpret73 = GameBoard_isset_at(env3, tmp76, tmp77);
  } else {
    tmpret73 = false;
  } // endif
  return tmpret73;
} // end-of-function


function
tetris_piece__patsfun_16(env0, env1, env2, env3, arg0, arg1)
{
//
// knd = 0
  var tmpret78
  var tmplab, tmplab_js
//
  // __patsflab_tetris_piece__patsfun_16
  tmpret78 = tetris_piece__ftest_15(env0, env1, env2, env3, arg0, arg1);
  return tmpret78;
} // end-of-function


function
Piece_repos_blocks(arg0)
{
//
// knd = 0
  var tmp80
  var tmp81
  var tmp82
  var tmplab, tmplab_js
//
  // __patsflab_Piece_repos_blocks
  tmp80 = Piece_get_mat1(arg0);
  tmp81 = Piece_get_x(arg0);
  tmp82 = Piece_get_y(arg0);
  ats2jspre_matrixref_foreach_cloref(tmp80, 4, 4, tetris_piece__patsfun_19__closurerize(tmp80, tmp81, tmp82));
  return/*_void*/;
} // end-of-function


function
tetris_piece__block_repos_18(arg0, arg1, arg2)
{
//
// knd = 0
  var tmp84
  var tmp86
  var tmp87
  var tmplab, tmplab_js
//
  // __patsflab_tetris_piece__block_repos_18
  tmp84 = Block_isnot_null(arg0);
  if(tmp84) {
    tmp86 = ats2jspre_int2double(arg1);
    Block_set_x(arg0, tmp86);
    tmp87 = ats2jspre_int2double(arg2);
    Block_set_y(arg0, tmp87);
  } else {
    // ATSINSmove_void
  } // endif
  return/*_void*/;
} // end-of-function


function
tetris_piece__patsfun_19(env0, env1, env2, arg0, arg1)
{
//
// knd = 0
  var tmp89
  var tmp90
  var tmp91
  var tmplab, tmplab_js
//
  // __patsflab_tetris_piece__patsfun_19
  tmp89 = ats2jspre_matrixref_get_at(env0, arg0, 4, arg1);
  tmp90 = ats2jspre_add_int0_int0(env1, arg0);
  tmp91 = ats2jspre_add_int0_int0(env2, arg1);
  tetris_piece__block_repos_18(tmp89, tmp90, tmp91);
  return/*_void*/;
} // end-of-function


function
Piece_stage_blocks(arg0)
{
//
// knd = 0
  var tmp93
  var tmplab, tmplab_js
//
  // __patsflab_Piece_stage_blocks
  tmp93 = Piece_get_mat1(arg0);
  ats2jspre_matrixref_foreach_cloref(tmp93, 4, 4, tetris_piece__patsfun_21__closurerize(tmp93));
  return/*_void*/;
} // end-of-function


function
tetris_piece__patsfun_21(env0, arg0, arg1)
{
//
// knd = 0
  var tmp95
  var tmp96
  var tmplab, tmplab_js
//
  // __patsflab_tetris_piece__patsfun_21
  tmp95 = ats2jspre_matrixref_get_at(env0, arg0, 4, arg1);
  tmp96 = Block_isnot_null(tmp95);
  if(tmp96) {
    theStage_addChild(tmp95);
  } else {
    // ATSINSmove_void
  } // endif
  return/*_void*/;
} // end-of-function


function
_057_home_057_hwxi_057_research_057_Postiats_055_contrib_057_git_057_projects_057_SMALL_057_JSmygame_057_Tetris_057_tetris_piece_056_dats__matrixref_lrotate_to(arg0, arg1, arg2, arg3)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_matrixref_lrotate_to
  ats2jspre_matrixref_foreach_cloref(arg0, arg2, arg3, tetris_piece__patsfun_23__closurerize(arg0, arg1, arg2, arg3));
  return/*_void*/;
} // end-of-function


function
tetris_piece__patsfun_23(env0, env1, env2, env3, arg0, arg1)
{
//
// knd = 0
  var tmp99
  var tmp100
  var tmp101
  var tmplab, tmplab_js
//
  // __patsflab_tetris_piece__patsfun_23
  tmp100 = ats2jspre_sub_int1_int1(env2, 1);
  tmp99 = ats2jspre_sub_int1_int1(tmp100, arg0);
  tmp101 = ats2jspre_matrixref_get_at(env0, arg0, env3, arg1);
  ats2jspre_matrixref_set_at(env1, arg1, env2, tmp99, tmp101);
  return/*_void*/;
} // end-of-function


function
_057_home_057_hwxi_057_research_057_Postiats_055_contrib_057_git_057_projects_057_SMALL_057_JSmygame_057_Tetris_057_tetris_piece_056_dats__matrixref_rrotate_to(arg0, arg1, arg2, arg3)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_matrixref_rrotate_to
  ats2jspre_matrixref_foreach_cloref(arg0, arg2, arg3, tetris_piece__patsfun_25__closurerize(arg0, arg1, arg2, arg3));
  return/*_void*/;
} // end-of-function


function
tetris_piece__patsfun_25(env0, env1, env2, env3, arg0, arg1)
{
//
// knd = 0
  var tmp104
  var tmp105
  var tmp106
  var tmplab, tmplab_js
//
  // __patsflab_tetris_piece__patsfun_25
  tmp105 = ats2jspre_sub_int1_int1(env3, 1);
  tmp104 = ats2jspre_sub_int1_int1(tmp105, arg1);
  tmp106 = ats2jspre_matrixref_get_at(env0, arg0, env3, arg1);
  ats2jspre_matrixref_set_at(env1, tmp104, env2, arg0, tmp106);
  return/*_void*/;
} // end-of-function


function
Piece_xmove_l(arg0)
{
//
// knd = 0
  var tmpret107
  var tmp108
  var tmp109
  var tmp110
  var tmp111
  var tmp112
  var tmp114
  var tmplab, tmplab_js
//
  // __patsflab_Piece_xmove_l
  tmp108 = Piece_get_x(arg0);
  tmp109 = Piece_get_y(arg0);
  tmp111 = Piece_get_mat1(arg0);
  tmp112 = ats2jspre_sub_int0_int0(tmp108, 1);
  tmp110 = Piece_mat_collide_at(tmp111, tmp112, tmp109);
  if(tmp110) {
    tmpret107 = false;
  } else {
    tmp114 = ats2jspre_sub_int0_int0(tmp108, 1);
    Piece_set_x(arg0, tmp114);
    Piece_repos_blocks(arg0);
    tmpret107 = true;
  } // endif
  return tmpret107;
} // end-of-function


function
Piece_xmove_r(arg0)
{
//
// knd = 0
  var tmpret116
  var tmp117
  var tmp118
  var tmp119
  var tmp120
  var tmp121
  var tmp123
  var tmplab, tmplab_js
//
  // __patsflab_Piece_xmove_r
  tmp117 = Piece_get_x(arg0);
  tmp118 = Piece_get_y(arg0);
  tmp120 = Piece_get_mat1(arg0);
  tmp121 = ats2jspre_add_int0_int0(tmp117, 1);
  tmp119 = Piece_mat_collide_at(tmp120, tmp121, tmp118);
  if(tmp119) {
    tmpret116 = false;
  } else {
    tmp123 = ats2jspre_add_int0_int0(tmp117, 1);
    Piece_set_x(arg0, tmp123);
    Piece_repos_blocks(arg0);
    tmpret116 = true;
  } // endif
  return tmpret116;
} // end-of-function


function
Piece_ymove_dn(arg0)
{
//
// knd = 0
  var tmpret125
  var tmp126
  var tmp127
  var tmp128
  var tmp129
  var tmp130
  var tmp132
  var tmplab, tmplab_js
//
  // __patsflab_Piece_ymove_dn
  tmp126 = Piece_get_x(arg0);
  tmp127 = Piece_get_y(arg0);
  tmp129 = Piece_get_mat1(arg0);
  tmp130 = ats2jspre_add_int0_int0(tmp127, 1);
  tmp128 = Piece_mat_collide_at(tmp129, tmp126, tmp130);
  if(tmp128) {
    tmpret125 = false;
  } else {
    tmp132 = ats2jspre_add_int0_int0(tmp127, 1);
    Piece_set_y(arg0, tmp132);
    Piece_repos_blocks(arg0);
    tmpret125 = true;
  } // endif
  return tmpret125;
} // end-of-function


function
Piece_lrotate(arg0)
{
//
// knd = 0
  var tmpret134
  var tmp135
  var tmp136
  var tmp138
  var tmp139
  var tmp140
  var tmplab, tmplab_js
//
  // __patsflab_Piece_lrotate
  tmp135 = Piece_get_mat1(arg0);
  tmp136 = Piece_get_mat2(arg0);
  _057_home_057_hwxi_057_research_057_Postiats_055_contrib_057_git_057_projects_057_SMALL_057_JSmygame_057_Tetris_057_tetris_piece_056_dats__matrixref_lrotate_to(tmp135, tmp136, 4, 4);
  tmp139 = Piece_get_x(arg0);
  tmp140 = Piece_get_y(arg0);
  tmp138 = Piece_mat_collide_at(tmp136, tmp139, tmp140);
  if(tmp138) {
    Piece_mat_nullify(tmp136);
    tmpret134 = false;
  } else {
    Piece_mat_nullify(tmp135);
    Piece_set_mat1(arg0, tmp136);
    Piece_set_mat2(arg0, tmp135);
    Piece_repos_blocks(arg0);
    tmpret134 = true;
  } // endif
  return tmpret134;
} // end-of-function


function
Piece_rrotate(arg0)
{
//
// knd = 0
  var tmpret146
  var tmp147
  var tmp148
  var tmp150
  var tmp151
  var tmp152
  var tmplab, tmplab_js
//
  // __patsflab_Piece_rrotate
  tmp147 = Piece_get_mat1(arg0);
  tmp148 = Piece_get_mat2(arg0);
  _057_home_057_hwxi_057_research_057_Postiats_055_contrib_057_git_057_projects_057_SMALL_057_JSmygame_057_Tetris_057_tetris_piece_056_dats__matrixref_rrotate_to(tmp147, tmp148, 4, 4);
  tmp151 = Piece_get_x(arg0);
  tmp152 = Piece_get_y(arg0);
  tmp150 = Piece_mat_collide_at(tmp148, tmp151, tmp152);
  if(tmp150) {
    Piece_mat_nullify(tmp148);
    tmpret146 = false;
  } else {
    Piece_mat_nullify(tmp147);
    Piece_set_mat1(arg0, tmp148);
    Piece_set_mat2(arg0, tmp147);
    Piece_repos_blocks(arg0);
    tmpret146 = true;
  } // endif
  return tmpret146;
} // end-of-function


function
_057_home_057_hwxi_057_research_057_Postiats_055_contrib_057_git_057_projects_057_SMALL_057_JSmygame_057_Tetris_057_tetris_056_sats__thePiece_xmove_l()
{
//
// knd = 0
  var tmp159
  var tmp160
  var tmplab, tmplab_js
//
  // __patsflab_thePiece_xmove_l
  tmp160 = thePiece_get();
  tmp159 = Piece_xmove_l(tmp160);
  // ATSINSmove_void
  return/*_void*/;
} // end-of-function


function
_057_home_057_hwxi_057_research_057_Postiats_055_contrib_057_git_057_projects_057_SMALL_057_JSmygame_057_Tetris_057_tetris_056_sats__thePiece_xmove_r()
{
//
// knd = 0
  var tmp162
  var tmp163
  var tmplab, tmplab_js
//
  // __patsflab_thePiece_xmove_r
  tmp163 = thePiece_get();
  tmp162 = Piece_xmove_r(tmp163);
  // ATSINSmove_void
  return/*_void*/;
} // end-of-function


function
_057_home_057_hwxi_057_research_057_Postiats_055_contrib_057_git_057_projects_057_SMALL_057_JSmygame_057_Tetris_057_tetris_056_sats__thePiece_lrotate()
{
//
// knd = 0
  var tmp165
  var tmp166
  var tmplab, tmplab_js
//
  // __patsflab_thePiece_lrotate
  tmp166 = thePiece_get();
  tmp165 = Piece_lrotate(tmp166);
  // ATSINSmove_void
  return/*_void*/;
} // end-of-function


function
_057_home_057_hwxi_057_research_057_Postiats_055_contrib_057_git_057_projects_057_SMALL_057_JSmygame_057_Tetris_057_tetris_056_sats__thePiece_rrotate()
{
//
// knd = 0
  var tmp168
  var tmp169
  var tmplab, tmplab_js
//
  // __patsflab_thePiece_rrotate
  tmp169 = thePiece_get();
  tmp168 = Piece_rrotate(tmp169);
  // ATSINSmove_void
  return/*_void*/;
} // end-of-function


function
Piece_start_out(arg0)
{
//
// knd = 0
  var tmp171
  var tmp172
  var tmp173
  var tmp174
  var tmp176
  var tmplab, tmplab_js
//
  // __patsflab_Piece_start_out
  tmp172 = ats2jspre_sub_int1_int1(15, 4);
  tmp171 = ats2jspre_div_int1_int1(tmp172, 2);
  tmp174 = Piece_get_mat1(arg0);
  tmp173 = Piece_mat_collide_at(tmp174, tmp171, 0);
  tmp176 = ats2jspre_neg_bool0(tmp173);
  if(tmp176) {
    Piece_set_x(arg0, tmp171);
    Piece_set_y(arg0, 0);
    Piece_repos_blocks(arg0);
    Piece_stage_blocks(arg0);
  } else {
    // ATSINSmove_void
  } // endif
  if(tmp173) {
    theGame_stop();
  } else {
    // ATSINSmove_void
  } // endif
  if(tmp173) {
    ats2jspre_alert("Game over!");
  } else {
    // ATSINSmove_void
  } // endif
  return/*_void*/;
} // end-of-function


function
thePiece_start_out()
{
//
// knd = 0
  var tmp182
  var tmplab, tmplab_js
//
  // __patsflab_thePiece_start_out
  tmp182 = thePiece_get();
  Piece_start_out(tmp182);
  return/*_void*/;
} // end-of-function


function
Piece_dump_blocks(arg0)
{
//
// knd = 0
  var tmp184
  var tmp185
  var tmp186
  var tmplab, tmplab_js
//
  // __patsflab_Piece_dump_blocks
  tmp184 = Piece_get_x(arg0);
  tmp185 = Piece_get_y(arg0);
  tmp186 = Piece_get_mat1(arg0);
  ats2jspre_matrixref_foreach_cloref(tmp186, 4, 4, tetris_piece__patsfun_39__closurerize(tmp184, tmp185, tmp186));
  return/*_void*/;
} // end-of-function


function
tetris_piece__fwork_38(env0, env1, env2, arg0, arg1)
{
//
// knd = 0
  var tmp188
  var tmp189
  var tmp191
  var tmp192
  var tmp193
  var tmplab, tmplab_js
//
  // __patsflab_tetris_piece__fwork_38
  tmp188 = ats2jspre_matrixref_get_at(env2, arg0, 4, arg1);
  tmp189 = Block_isnot_null(tmp188);
  if(tmp189) {
    tmp191 = Block_null();
    ats2jspre_matrixref_set_at(env2, arg0, 4, arg1, tmp191);
    tmp192 = ats2jspre_add_int0_int0(env0, arg0);
    tmp193 = ats2jspre_add_int0_int0(env1, arg1);
    theGameBoard_set_at(tmp192, tmp193, tmp188);
  } else {
    // ATSINSmove_void
  } // endif
  return/*_void*/;
} // end-of-function


function
tetris_piece__patsfun_39(env0, env1, env2, arg0, arg1)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_tetris_piece__patsfun_39
  tetris_piece__fwork_38(env0, env1, env2, arg0, arg1);
  return/*_void*/;
} // end-of-function


function
thePiece_dump_blocks()
{
//
// knd = 0
  var tmp196
  var tmplab, tmplab_js
//
  // __patsflab_thePiece_dump_blocks
  tmp196 = thePiece_get();
  Piece_dump_blocks(tmp196);
  return/*_void*/;
} // end-of-function


function
Piece_update_rand(arg0)
{
//
// knd = 1
  var apy0
  var tmp198
  var tmp199
  var tmp200
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab_Piece_update_rand
    tmp200 = ats2jspre_JSmath_random();
    tmp199 = ats2jspre_mul_int_double(10, tmp200);
    tmp198 = ats2jspre_double2int(tmp199);
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab0
        if(!ATSCKpat_int(tmp198, 0)) { tmplab_js = 3; break; }
        case 2: // __atstmplab1
        tetris_piece__Piece_update_0_3(arg0);
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab2
        if(!ATSCKpat_int(tmp198, 1)) { tmplab_js = 5; break; }
        case 4: // __atstmplab3
        tetris_piece__Piece_update_10_4(arg0);
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 5: // __atstmplab4
        if(!ATSCKpat_int(tmp198, 2)) { tmplab_js = 7; break; }
        case 6: // __atstmplab5
        tetris_piece__Piece_update_11_5(arg0);
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 7: // __atstmplab6
        if(!ATSCKpat_int(tmp198, 3)) { tmplab_js = 9; break; }
        case 8: // __atstmplab7
        tetris_piece__Piece_update_20_6(arg0);
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 9: // __atstmplab8
        if(!ATSCKpat_int(tmp198, 4)) { tmplab_js = 11; break; }
        case 10: // __atstmplab9
        tetris_piece__Piece_update_21_7(arg0);
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 11: // __atstmplab10
        if(!ATSCKpat_int(tmp198, 5)) { tmplab_js = 13; break; }
        case 12: // __atstmplab11
        tetris_piece__Piece_update_30_8(arg0);
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 13: // __atstmplab12
        if(!ATSCKpat_int(tmp198, 6)) { tmplab_js = 15; break; }
        case 14: // __atstmplab13
        tetris_piece__Piece_update_31_9(arg0);
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 15: // __atstmplab14
        if(!ATSCKpat_int(tmp198, 7)) { tmplab_js = 17; break; }
        case 16: // __atstmplab15
        tetris_piece__Piece_update_40_10(arg0);
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 17: // __atstmplab16
        if(!ATSCKpat_int(tmp198, 8)) { tmplab_js = 19; break; }
        case 18: // __atstmplab17
        tetris_piece__Piece_update_41_11(arg0);
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 19: // __atstmplab18
        // ATStailcalseq_beg
        apy0 = arg0;
        arg0 = apy0;
        funlab_js = 1; // __patsflab_Piece_update_rand
        // ATStailcalseq_end
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return/*_void*/;
  } // endwhile-fun
} // end-of-function


function
Piece_stageNP_blocks(arg0)
{
//
// knd = 0
  var tmp202
  var tmplab, tmplab_js
//
  // __patsflab_Piece_stageNP_blocks
  tmp202 = Piece_get_mat1(arg0);
  ats2jspre_matrixref_foreach_cloref(tmp202, 4, 4, tetris_piece__patsfun_43__closurerize(tmp202));
  return/*_void*/;
} // end-of-function


function
tetris_piece__patsfun_43(env0, arg0, arg1)
{
//
// knd = 0
  var tmp204
  var tmp205
  var tmplab, tmplab_js
//
  // __patsflab_tetris_piece__patsfun_43
  tmp204 = ats2jspre_matrixref_get_at(env0, arg0, 4, arg1);
  tmp205 = Block_isnot_null(tmp204);
  if(tmp205) {
    theStageNP_addChild(tmp204);
  } else {
    // ATSINSmove_void
  } // endif
  return/*_void*/;
} // end-of-function


function
Piece_unstageNP_blocks(arg0)
{
//
// knd = 0
  var tmp207
  var tmplab, tmplab_js
//
  // __patsflab_Piece_unstageNP_blocks
  tmp207 = Piece_get_mat1(arg0);
  ats2jspre_matrixref_foreach_cloref(tmp207, 4, 4, tetris_piece__patsfun_45__closurerize(tmp207));
  return/*_void*/;
} // end-of-function


function
tetris_piece__patsfun_45(env0, arg0, arg1)
{
//
// knd = 0
  var tmp209
  var tmp210
  var tmplab, tmplab_js
//
  // __patsflab_tetris_piece__patsfun_45
  tmp209 = ats2jspre_matrixref_get_at(env0, arg0, 4, arg1);
  tmp210 = Block_isnot_null(tmp209);
  if(tmp210) {
    theStageNP_removeChild(tmp209);
  } else {
    // ATSINSmove_void
  } // endif
  return/*_void*/;
} // end-of-function


function
Piece_reposNP_blocks(arg0)
{
//
// knd = 0
  var tmp212
  var tmplab, tmplab_js
//
  // __patsflab_Piece_reposNP_blocks
  tmp212 = Piece_get_mat1(arg0);
  ats2jspre_matrixref_foreach_cloref(tmp212, 4, 4, tetris_piece__patsfun_48__closurerize(tmp212));
  return/*_void*/;
} // end-of-function


function
tetris_piece__block_repos_47(arg0, arg1, arg2)
{
//
// knd = 0
  var tmp214
  var tmplab, tmplab_js
//
  // __patsflab_tetris_piece__block_repos_47
  tmp214 = Block_isnot_null(arg0);
  if(tmp214) {
    Block_set_x(arg0, arg1);
    Block_set_y(arg0, arg2);
  } else {
    // ATSINSmove_void
  } // endif
  return/*_void*/;
} // end-of-function


function
tetris_piece__patsfun_48(env0, arg0, arg1)
{
//
// knd = 0
  var tmp217
  var tmp218
  var tmp219
  var tmplab, tmplab_js
//
  // __patsflab_tetris_piece__patsfun_48
  tmp217 = ats2jspre_matrixref_get_at(env0, arg0, 4, arg1);
  tmp218 = ats2jspre_add_double_int(0.25, arg0);
  tmp219 = ats2jspre_add_double_int(0.25, arg1);
  tetris_piece__block_repos_47(tmp217, tmp218, tmp219);
  return/*_void*/;
} // end-of-function


function
thePiece_get()
{
//
// knd = 0
  var tmpret227
  var tmplab, tmplab_js
//
  // __patsflab_thePiece_get
  tmpret227 = ats2jspre_ref_get_elt(tetris_piece__statmp225);
  return tmpret227;
} // end-of-function


function
theNextPiece_get()
{
//
// knd = 0
  var tmpret228
  var tmplab, tmplab_js
//
  // __patsflab_theNextPiece_get
  tmpret228 = ats2jspre_ref_get_elt(tetris_piece__statmp226);
  return tmpret228;
} // end-of-function


function
thePiece_theNextPiece_update()
{
//
// knd = 0
  var tmp230
  var tmp231
  var tmp233
  var tmp234
  var tmp241
  var tmplab, tmplab_js
//
  // __patsflab_thePiece_theNextPiece_update
  tmp230 = ats2jspre_ref_get_elt(tetris_piece__statmp225);
  tmp231 = ats2jspre_ref_get_elt(tetris_piece__statmp226);
  Piece_start_out(tmp231);
  tmp233 = theGameStatus_get();
  tmp234 = ats2jspre_neq_int0_int0(tmp233, 0);
  if(tmp234) {
    ats2jspre_ref_set_elt(tetris_piece__statmp225, tmp231);
    ats2jspre_ref_set_elt(tetris_piece__statmp226, tmp230);
    Piece_update_rand(tmp230);
    Piece_reposNP_blocks(tmp230);
    Piece_stageNP_blocks(tmp230);
    Piece_unstageNP_blocks(tmp231);
    tmp241 = ats2jspre_lt_int0_int0(tmp233, 0);
    if(tmp241) {
      theGame_autoplay_piece(tmp231);
    } else {
      // ATSINSmove_void
    } // endif
  } else {
    // ATSINSmove_void
  } // endif
  return/*_void*/;
} // end-of-function


function
Piece_iforeach(arg0, arg1)
{
//
// knd = 0
  var tmp243
  var tmplab, tmplab_js
//
  // __patsflab_Piece_iforeach
  tmp243 = Piece_get_mat1(arg0);
  ats2jspre_matrixref_foreach_cloref(tmp243, 4, 4, tetris_piece__patsfun_53__closurerize(arg1, tmp243));
  return/*_void*/;
} // end-of-function


function
tetris_piece__patsfun_53(env0, env1, arg0, arg1)
{
//
// knd = 0
  var tmp245
  var tmp246
  var tmplab, tmplab_js
//
  // __patsflab_tetris_piece__patsfun_53
  tmp246 = ats2jspre_matrixref_get_at(env1, arg0, 4, arg1);
  tmp245 = Block_isnot_null(tmp246);
  env0[0](env0, arg0, arg1, tmp245);
  return/*_void*/;
} // end-of-function

// dynloadflag_minit
var _057_home_057_hwxi_057_research_057_Postiats_055_contrib_057_git_057_projects_057_SMALL_057_JSmygame_057_Tetris_057_tetris_piece_056_dats__dynloadflag = 0;

function
_057_home_057_hwxi_057_research_057_Postiats_055_contrib_057_git_057_projects_057_SMALL_057_JSmygame_057_Tetris_057_tetris_piece_056_dats__dynload()
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // ATSdynload()
  // ATSdynloadflag_sta(_057_home_057_hwxi_057_research_057_Postiats_055_contrib_057_git_057_projects_057_SMALL_057_JSmygame_057_Tetris_057_tetris_piece_056_dats__dynloadflag(414))
  if(ATSCKiseqz(_057_home_057_hwxi_057_research_057_Postiats_055_contrib_057_git_057_projects_057_SMALL_057_JSmygame_057_Tetris_057_tetris_piece_056_dats__dynloadflag)) {
    _057_home_057_hwxi_057_research_057_Postiats_055_contrib_057_git_057_projects_057_SMALL_057_JSmygame_057_Tetris_057_tetris_piece_056_dats__dynloadflag = 1 ; // flag is set
    tetris_piece__statmp14 = ats2jspre_matrixref_make_elt(4, 4, 0);
    ats2jspre_matrixref_set_at(tetris_piece__statmp14, 1, 4, 1, 1);
    ats2jspre_matrixref_set_at(tetris_piece__statmp14, 1, 4, 2, 1);
    ats2jspre_matrixref_set_at(tetris_piece__statmp14, 2, 4, 1, 1);
    ats2jspre_matrixref_set_at(tetris_piece__statmp14, 2, 4, 2, 1);
    tetris_piece__statmp20 = ats2jspre_matrixref_make_elt(4, 4, 0);
    ats2jspre_matrixref_set_at(tetris_piece__statmp20, 1, 4, 0, 1);
    ats2jspre_matrixref_set_at(tetris_piece__statmp20, 1, 4, 1, 1);
    ats2jspre_matrixref_set_at(tetris_piece__statmp20, 1, 4, 2, 1);
    ats2jspre_matrixref_set_at(tetris_piece__statmp20, 1, 4, 3, 1);
    tetris_piece__statmp26 = ats2jspre_matrixref_make_elt(4, 4, 0);
    ats2jspre_matrixref_set_at(tetris_piece__statmp26, 2, 4, 0, 1);
    ats2jspre_matrixref_set_at(tetris_piece__statmp26, 2, 4, 1, 1);
    ats2jspre_matrixref_set_at(tetris_piece__statmp26, 2, 4, 2, 1);
    ats2jspre_matrixref_set_at(tetris_piece__statmp26, 2, 4, 3, 1);
    tetris_piece__statmp32 = ats2jspre_matrixref_make_elt(4, 4, 0);
    ats2jspre_matrixref_set_at(tetris_piece__statmp32, 1, 4, 0, 1);
    ats2jspre_matrixref_set_at(tetris_piece__statmp32, 1, 4, 1, 1);
    ats2jspre_matrixref_set_at(tetris_piece__statmp32, 1, 4, 2, 1);
    ats2jspre_matrixref_set_at(tetris_piece__statmp32, 2, 4, 1, 1);
    tetris_piece__statmp38 = ats2jspre_matrixref_make_elt(4, 4, 0);
    ats2jspre_matrixref_set_at(tetris_piece__statmp38, 2, 4, 0, 1);
    ats2jspre_matrixref_set_at(tetris_piece__statmp38, 2, 4, 1, 1);
    ats2jspre_matrixref_set_at(tetris_piece__statmp38, 2, 4, 2, 1);
    ats2jspre_matrixref_set_at(tetris_piece__statmp38, 1, 4, 1, 1);
    tetris_piece__statmp44 = ats2jspre_matrixref_make_elt(4, 4, 0);
    ats2jspre_matrixref_set_at(tetris_piece__statmp44, 1, 4, 0, 1);
    ats2jspre_matrixref_set_at(tetris_piece__statmp44, 1, 4, 1, 1);
    ats2jspre_matrixref_set_at(tetris_piece__statmp44, 1, 4, 2, 1);
    ats2jspre_matrixref_set_at(tetris_piece__statmp44, 2, 4, 2, 1);
    tetris_piece__statmp50 = ats2jspre_matrixref_make_elt(4, 4, 0);
    ats2jspre_matrixref_set_at(tetris_piece__statmp50, 2, 4, 0, 1);
    ats2jspre_matrixref_set_at(tetris_piece__statmp50, 2, 4, 1, 1);
    ats2jspre_matrixref_set_at(tetris_piece__statmp50, 2, 4, 2, 1);
    ats2jspre_matrixref_set_at(tetris_piece__statmp50, 1, 4, 2, 1);
    tetris_piece__statmp56 = ats2jspre_matrixref_make_elt(4, 4, 0);
    ats2jspre_matrixref_set_at(tetris_piece__statmp56, 1, 4, 0, 1);
    ats2jspre_matrixref_set_at(tetris_piece__statmp56, 1, 4, 1, 1);
    ats2jspre_matrixref_set_at(tetris_piece__statmp56, 2, 4, 1, 1);
    ats2jspre_matrixref_set_at(tetris_piece__statmp56, 2, 4, 2, 1);
    tetris_piece__statmp62 = ats2jspre_matrixref_make_elt(4, 4, 0);
    ats2jspre_matrixref_set_at(tetris_piece__statmp62, 2, 4, 0, 1);
    ats2jspre_matrixref_set_at(tetris_piece__statmp62, 2, 4, 1, 1);
    ats2jspre_matrixref_set_at(tetris_piece__statmp62, 1, 4, 1, 1);
    ats2jspre_matrixref_set_at(tetris_piece__statmp62, 1, 4, 2, 1);
    tetris_piece__statmp220 = Piece_new();
    tetris_piece__statmp221 = Piece_new();
    Piece_update_rand(tetris_piece__statmp221);
    Piece_reposNP_blocks(tetris_piece__statmp221);
    Piece_stageNP_blocks(tetris_piece__statmp221);
    tetris_piece__statmp225 = ats2jspre_ref(tetris_piece__statmp220);
    tetris_piece__statmp226 = ats2jspre_ref(tetris_piece__statmp221);
  } // endif
  return/*_void*/;
} // end-of-function


function
tetris_piece_initize()
{
//
// knd = 0
  var tmplab, tmplab_js
//
  _057_home_057_hwxi_057_research_057_Postiats_055_contrib_057_git_057_projects_057_SMALL_057_JSmygame_057_Tetris_057_tetris_piece_056_dats__dynload();
  return/*_void*/;
} // end-of-function


/* ****** ****** */

/* end-of-compilation-unit */
