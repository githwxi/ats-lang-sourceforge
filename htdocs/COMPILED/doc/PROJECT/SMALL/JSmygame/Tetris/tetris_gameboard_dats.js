/*
**
** The JavaScript code is generated by atscc2js
** The starting compilation time is: 2015-6-29: 15h:18m
**
*/

// ATSassume(_057_home_057_hwxi_057_research_057_Postiats_055_contrib_057_git_057_projects_057_SMALL_057_JSmygame_057_Tetris_057_tetris_056_sats__GameBoard_type)

var tetris_gameboard__statmp0

var tetris_gameboard__statmp1

function
tetris_gameboard__patsfun_3__closurerize(env0)
{
  return [function(cenv, arg0, arg1) { return tetris_gameboard__patsfun_3(cenv[1], arg0, arg1); }, env0];
}


function
theGameBoard_get()
{
//
// knd = 0
  var tmpret2
  var tmplab, tmplab_js
//
  // __patsflab_theGameBoard_get
  tmpret2 = tetris_gameboard__statmp0;
  return tmpret2;
} // end-of-function


function
theGameBoard_set_at(arg0, arg1, arg2)
{
//
// knd = 0
  var tmp4
  var tmp5
  var tmp6
  var tmp7
  var tmplab, tmplab_js
//
  // __patsflab_theGameBoard_set_at
  tmp4 = ats2jspre_lt_int1_int1(arg0, 0);
  if(tmp4) {
    // ATSINSmove_void
  } else {
    tmp5 = ats2jspre_lt_int1_int1(arg1, 0);
    if(tmp5) {
      // ATSINSmove_void
    } else {
      tmp6 = ats2jspre_gte_int1_int1(arg0, 15);
      if(tmp6) {
        // ATSINSmove_void
      } else {
        tmp7 = ats2jspre_gte_int1_int1(arg1, 24);
        if(tmp7) {
          // ATSINSmove_void
        } else {
          ats2jspre_matrixref_set_at(tetris_gameboard__statmp0, arg0, 24, arg1, arg2);
        } // endif
      } // endif
    } // endif
  } // endif
  return/*_void*/;
} // end-of-function


function
GameBoard_clear(arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_GameBoard_clear
  ats2jspre_matrixref_foreach_cloref(arg0, 15, 24, tetris_gameboard__patsfun_3__closurerize(arg0));
  return/*_void*/;
} // end-of-function


function
tetris_gameboard__patsfun_3(env0, arg0, arg1)
{
//
// knd = 0
  var tmp10
  var tmp11
  var tmp13
  var tmplab, tmplab_js
//
  // __patsflab_tetris_gameboard__patsfun_3
  tmp10 = ats2jspre_matrixref_get_at(env0, arg0, 24, arg1);
  tmp11 = Block_isnot_null(tmp10);
  if(tmp11) {
    tmp13 = Block_null();
    ats2jspre_matrixref_set_at(env0, arg0, 24, arg1, tmp13);
    theStage_removeChild(tmp10);
  } else {
    // ATSINSmove_void
  } // endif
  return/*_void*/;
} // end-of-function


function
theGameBoard_clear()
{
//
// knd = 0
  var tmp15
  var tmplab, tmplab_js
//
  // __patsflab_theGameBoard_clear
  tmp15 = theGameBoard_get();
  GameBoard_clear(tmp15);
  return/*_void*/;
} // end-of-function


function
GameBoard_isset_at(arg0, arg1, arg2)
{
//
// knd = 0
  var tmpret16
  var tmp17
  var tmp18
  var tmp19
  var tmp20
  var tmp21
  var tmplab, tmplab_js
//
  // __patsflab_GameBoard_isset_at
  tmp17 = ats2jspre_lt_int1_int1(arg1, 0);
  if(tmp17) {
    tmpret16 = true;
  } else {
    tmp18 = ats2jspre_lt_int1_int1(arg2, 0);
    if(tmp18) {
      tmpret16 = true;
    } else {
      tmp19 = ats2jspre_gte_int1_int1(arg1, 15);
      if(tmp19) {
        tmpret16 = true;
      } else {
        tmp20 = ats2jspre_gte_int1_int1(arg2, 24);
        if(tmp20) {
          tmpret16 = true;
        } else {
          tmp21 = ats2jspre_matrixref_get_at(arg0, arg1, 24, arg2);
          tmpret16 = Block_isnot_null(tmp21);
        } // endif
      } // endif
    } // endif
  } // endif
  return tmpret16;
} // end-of-function


function
GameBoard_rowful_at(arg0, arg1)
{
//
// knd = 0
  var tmpret22
  var tmplab, tmplab_js
//
  // __patsflab_GameBoard_rowful_at
  tmpret22 = tetris_gameboard__loop_7(arg0, arg1, 24, 0);
  return tmpret22;
} // end-of-function


function
tetris_gameboard__loop_7(env0, env1, env2, arg0)
{
//
// knd = 1
  var apy0
  var tmpret23
  var tmp24
  var tmp25
  var tmp26
  var tmp27
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab_tetris_gameboard__loop_7
    tmp24 = ats2jspre_lt_int1_int1(arg0, 15);
    if(tmp24) {
      tmp26 = ats2jspre_matrixref_get_at(env0, arg0, env2, env1);
      tmp25 = Block_isnot_null(tmp26);
      if(tmp25) {
        tmp27 = ats2jspre_add_int1_int1(arg0, 1);
        // ATStailcalseq_beg
        apy0 = tmp27;
        arg0 = apy0;
        funlab_js = 1; // __patsflab_tetris_gameboard__loop_7
        // ATStailcalseq_end
      } else {
        tmpret23 = false;
      } // endif
    } else {
      tmpret23 = true;
    } // endif
    if (funlab_js > 0) continue; else return tmpret23;
  } // endwhile-fun
} // end-of-function


function
GameBoard_rowdel_at(arg0, arg1)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_GameBoard_rowdel_at
  tetris_gameboard__loop_9(arg0, arg1, 0);
  tetris_gameboard__loop1_10(arg0, arg1, 0);
  return/*_void*/;
} // end-of-function


function
tetris_gameboard__loop_9(env0, env1, arg0)
{
//
// knd = 1
  var apy0
  var tmp30
  var tmp32
  var tmp34
  var tmp35
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab_tetris_gameboard__loop_9
    tmp30 = ats2jspre_lt_int1_int1(arg0, 15);
    if(tmp30) {
      tmp32 = ats2jspre_matrixref_get_at(env0, arg0, 24, env1);
      Block_unstage(tmp32);
      tmp34 = Block_null();
      ats2jspre_matrixref_set_at(env0, arg0, 24, env1, tmp34);
      tmp35 = ats2jspre_add_int1_int1(arg0, 1);
      // ATStailcalseq_beg
      apy0 = tmp35;
      arg0 = apy0;
      funlab_js = 1; // __patsflab_tetris_gameboard__loop_9
      // ATStailcalseq_end
    } else {
      // ATSINSmove_void
    } // endif
    if (funlab_js > 0) continue; else return/*_void*/;
  } // endwhile-fun
} // end-of-function


function
tetris_gameboard__loop1_10(env0, env1, arg0)
{
//
// knd = 0
  var tmp37
  var tmplab, tmplab_js
//
  // __patsflab_tetris_gameboard__loop1_10
  tmp37 = ats2jspre_lt_int1_int1(arg0, 15);
  if(tmp37) {
    tetris_gameboard__loop2_11(env0, env1, arg0, 0);
  } else {
    // ATSINSmove_void
  } // endif
  return/*_void*/;
} // end-of-function


function
tetris_gameboard__loop2_11(env0, env1, arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmp39
  var tmp40
  var tmp41
  var tmp42
  var tmp43
  var tmp46
  var tmp48
  var tmp49
  var tmp50
  var tmp51
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab_tetris_gameboard__loop2_11
    tmp39 = ats2jspre_lt_int1_int1(arg1, 24);
    if(tmp39) {
      tmp40 = ats2jspre_sub_int1_int1(env1, arg1);
      tmp41 = ats2jspre_sub_int1_int1(tmp40, 1);
      tmp42 = ats2jspre_gte_int1_int1(tmp41, 0);
      if(tmp42) {
        tmp43 = ats2jspre_matrixref_get_at(env0, arg0, 24, tmp41);
        Block_drop1(tmp43);
        ats2jspre_matrixref_set_at(env0, arg0, 24, tmp40, tmp43);
        tmp46 = ats2jspre_add_int1_int1(arg1, 1);
        // ATStailcalseq_beg
        apy0 = arg0;
        apy1 = tmp46;
        arg0 = apy0;
        arg1 = apy1;
        funlab_js = 1; // __patsflab_tetris_gameboard__loop2_11
        // ATStailcalseq_end
      } else {
        tmp48 = ats2jspre_gte_int1_int1(tmp40, 0);
        if(tmp48) {
          tmp49 = Block_null();
          ats2jspre_matrixref_set_at(env0, arg0, 24, tmp40, tmp49);
        } else {
          // ATSINSmove_void
        } // endif
        tmp50 = ats2jspre_add_int1_int1(arg1, 1);
        // ATStailcalseq_beg
        apy0 = arg0;
        apy1 = tmp50;
        arg0 = apy0;
        arg1 = apy1;
        funlab_js = 1; // __patsflab_tetris_gameboard__loop2_11
        // ATStailcalseq_end
      } // endif
    } else {
      tmp51 = ats2jspre_add_int1_int1(arg0, 1);
      tetris_gameboard__loop1_10(env0, env1, tmp51);
    } // endif
    if (funlab_js > 0) continue; else return/*_void*/;
  } // endwhile-fun
} // end-of-function


function
GameBoard_rowdel_one(arg0)
{
//
// knd = 0
  var tmpret53
  var tmplab, tmplab_js
//
  // __patsflab_GameBoard_rowdel_one
  tmpret53 = tetris_gameboard__loop_13(arg0, 0);
  return tmpret53;
} // end-of-function


function
tetris_gameboard__loop_13(env0, arg0)
{
//
// knd = 1
  var apy0
  var tmpret54
  var tmp55
  var tmp56
  var tmp58
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab_tetris_gameboard__loop_13
    tmp55 = ats2jspre_lt_int1_int1(arg0, 24);
    if(tmp55) {
      tmp56 = GameBoard_rowful_at(env0, arg0);
      if(tmp56) {
        GameBoard_rowdel_at(env0, arg0);
        tmpret54 = true;
      } else {
        tmp58 = ats2jspre_add_int1_int1(arg0, 1);
        // ATStailcalseq_beg
        apy0 = tmp58;
        arg0 = apy0;
        funlab_js = 1; // __patsflab_tetris_gameboard__loop_13
        // ATStailcalseq_end
      } // endif
    } else {
      tmpret54 = false;
    } // endif
    if (funlab_js > 0) continue; else return tmpret54;
  } // endwhile-fun
} // end-of-function


function
theGameBoard_rowdel_one()
{
//
// knd = 0
  var tmpret59
  var tmp60
  var tmplab, tmplab_js
//
  // __patsflab_theGameBoard_rowdel_one
  tmp60 = theGameBoard_get();
  tmpret59 = GameBoard_rowdel_one(tmp60);
  return tmpret59;
} // end-of-function


function
theGameBoard_iforeach(arg0)
{
//
// knd = 0
  var tmp62
  var tmplab, tmplab_js
//
  // __patsflab_theGameBoard_iforeach
  tmp62 = theGameBoard_get();
  tetris_gameboard__loop1_16(arg0, tmp62, 0);
  return/*_void*/;
} // end-of-function


function
tetris_gameboard__loop1_16(env0, env1, arg0)
{
//
// knd = 1
  var apy0
  var tmp64
  var tmp66
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab_tetris_gameboard__loop1_16
    tmp64 = ats2jspre_lt_int0_int0(arg0, 15);
    if(tmp64) {
      tetris_gameboard__loop2_17(env0, env1, arg0, 0);
      tmp66 = ats2jspre_add_int0_int0(arg0, 1);
      // ATStailcalseq_beg
      apy0 = tmp66;
      arg0 = apy0;
      funlab_js = 1; // __patsflab_tetris_gameboard__loop1_16
      // ATStailcalseq_end
    } else {
      // ATSINSmove_void
    } // endif
    if (funlab_js > 0) continue; else return/*_void*/;
  } // endwhile-fun
} // end-of-function


function
tetris_gameboard__loop2_17(env0, env1, arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmp68
  var tmp70
  var tmp71
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab_tetris_gameboard__loop2_17
    tmp68 = ats2jspre_lt_int0_int0(arg1, 24);
    if(tmp68) {
      tmp70 = GameBoard_isset_at(env1, arg0, arg1);
      env0[0](env0, arg0, arg1, tmp70);
      tmp71 = ats2jspre_add_int0_int0(arg1, 1);
      // ATStailcalseq_beg
      apy0 = arg0;
      apy1 = tmp71;
      arg0 = apy0;
      arg1 = apy1;
      funlab_js = 1; // __patsflab_tetris_gameboard__loop2_17
      // ATStailcalseq_end
    } else {
      // ATSINSmove_void
    } // endif
    if (funlab_js > 0) continue; else return/*_void*/;
  } // endwhile-fun
} // end-of-function

// dynloadflag_minit
var _057_home_057_hwxi_057_research_057_Postiats_055_contrib_057_git_057_projects_057_SMALL_057_JSmygame_057_Tetris_057_tetris_gameboard_056_dats__dynloadflag = 0;

function
_057_home_057_hwxi_057_research_057_Postiats_055_contrib_057_git_057_projects_057_SMALL_057_JSmygame_057_Tetris_057_tetris_gameboard_056_dats__dynload()
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // ATSdynload()
  // ATSdynloadflag_sta(_057_home_057_hwxi_057_research_057_Postiats_055_contrib_057_git_057_projects_057_SMALL_057_JSmygame_057_Tetris_057_tetris_gameboard_056_dats__dynloadflag(152))
  if(ATSCKiseqz(_057_home_057_hwxi_057_research_057_Postiats_055_contrib_057_git_057_projects_057_SMALL_057_JSmygame_057_Tetris_057_tetris_gameboard_056_dats__dynloadflag)) {
    _057_home_057_hwxi_057_research_057_Postiats_055_contrib_057_git_057_projects_057_SMALL_057_JSmygame_057_Tetris_057_tetris_gameboard_056_dats__dynloadflag = 1 ; // flag is set
    tetris_gameboard__statmp1 = Block_null();
    tetris_gameboard__statmp0 = ats2jspre_matrixref_make_elt(15, 24, tetris_gameboard__statmp1);
  } // endif
  return/*_void*/;
} // end-of-function


function
tetris_gameboard_initize()
{
//
// knd = 0
  var tmplab, tmplab_js
//
  _057_home_057_hwxi_057_research_057_Postiats_055_contrib_057_git_057_projects_057_SMALL_057_JSmygame_057_Tetris_057_tetris_gameboard_056_dats__dynload();
  return/*_void*/;
} // end-of-function


/* ****** ****** */

/* end-of-compilation-unit */
