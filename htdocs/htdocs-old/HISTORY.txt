Here is some history of the development of ATS:

Prior to 2000:

DML (Dependent ML) is the predecessor of ATS. It was first designed
and implemented by Hongwei Xi in 1997-1998, when he was a PhD student
at CMU under the supervision of Frank Pfenning. In 1999, a variant of
DML based on the then caml-light language, the predecessor of ocaml,
was implemented by Hongwei Xi, and it was given the name deCaml.

Summer of 2002:

The feature of guarded recursive datatypes was developed by Hongwei Xi
Chiyan Chen and Gang Chen.

January of 2003:

An attempt to unify (DML-style) dependent types and guarded recursive
datatypes was initiated, resulting in the formalization of a framework
called Applied Type System.

Summer of 2004:

The typechecker for ATS/Proto was built by Hongwei Xi.

October of 2004:

The interpreter for ATS/Proto was built by Hongwei Xi

Summer of 2005:

* The compiler for ATS/Proto was implemented by Hongwei Xi, which
  compiles ATS code into C code. The boxed data representation was
  used in this compiler.

* The GC system for ATS/Proto was implemented by Rick Lavoie. At the
  start, two GC's were written, one of which was a mark-sweep GC and
  the other was a copying GC. After some experiment, it was decided
  that only mark-sweep GC was to be used for ATS.

* The run-time system for ATS/Proto system was implemented in jointed
* effort by Rick Lavoie, Likai Liu and Hongwei Xi.

May of 2006:

* The implementation of ATS/Geizella was started

January of 2006:

* The typechecker for ATS/Geizella was starting to function

Summear of 2007:

* The ATS-to-C compiler for ATS/Geizella was built by Hongwei Xi

Acknowledgments:

The following is a partial list of people who participated in the
development of ATS in one way or another:

Chiyan Chen, Sa Cui, Kevin Donnelly, Rick Lavoie, Likai Liu, Michel
Machado, Rui Shi, Dengping Zhu
